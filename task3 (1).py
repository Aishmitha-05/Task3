# -*- coding: utf-8 -*-
"""Task3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OZaHGxPUYLOITu8TF3LU8pp_IlpGG9vg
"""

!pip install tensorflow matplotlib

import tensorflow as tf
import matplotlib.pyplot as plt
import numpy as np
import PIL.Image
import tensorflow_hub as hub

from google.colab import files
uploaded = files.upload()

def load_img(path_to_img):
    max_dim = 512
    img = tf.io.read_file(path_to_img)
    img = tf.image.decode_image(img, channels=3)
    img = tf.image.convert_image_dtype(img, tf.float32)

    shape = tf.cast(tf.shape(img)[:-1], tf.float32)
    long_dim = max(shape)
    scale = max_dim / long_dim

    new_shape = tf.cast(shape * scale, tf.int32)
    img = tf.image.resize(img, new_shape)
    img = img[tf.newaxis, :]
    return img

def tensor_to_image(tensor):
    tensor = tensor * 255
    tensor = np.array(tensor, dtype=np.uint8)
    if np.ndim(tensor) > 3:
        tensor = tensor[0]
    return PIL.Image.fromarray(tensor)

content_image = load_img("your_content.jpg")
style_image = load_img("your_style.jpg")

plt.subplot(1, 2, 1)
plt.imshow(tf.squeeze(content_image))
plt.title("Content Image")

plt.subplot(1, 2, 2)
plt.imshow(tf.squeeze(style_image))
plt.title("Style Image")

from google.colab import files
uploaded = files.upload()

content_image = load_img("Screenshot 2025-06-22 223827.png")

import os
print(list(os.listdir()))

from google.colab import files
files.upload()

# Use the exact filenames of your uploaded images
content_image = load_img("Screenshot 2025-06-22 223827.png")  # puppy
style_image = load_img("Screenshot 2025-06-22 223844.png")    # standing dog

plt.figure(figsize=(10, 5))

plt.subplot(1, 2, 1)
plt.imshow(tf.squeeze(content_image))
plt.title("Content Image")
plt.axis('off')

plt.subplot(1, 2, 2)
plt.imshow(tf.squeeze(style_image))
plt.title("Style Image")
plt.axis('off')

plt.show()

import tensorflow_hub as hub

# Load the style transfer model from TensorFlow Hub
hub_model = hub.load('https://tfhub.dev/google/magenta/arbitrary-image-stylization-v1-256/2')

# Apply style
stylized_image = hub_model(tf.constant(content_image), tf.constant(style_image))[0]

# Convert and display the output
output = tensor_to_image(stylized_image)

plt.figure(figsize=(6,6))
plt.imshow(output)
plt.title("Stylized Output")
plt.axis('off')
plt.show()

# Save the image
output.save("styled_output.jpg")

from google.colab import files
files.download("styled_output.jpg")